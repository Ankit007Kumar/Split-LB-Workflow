name: Load Balancer Rules Management

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose action (add, update, or remove)'
        required: true
        default: 'add'
      listener_arn:
        description: 'Listener ARN of the Load Balancer'
        required: true
      target_group_arn:
        description: 'Target Group ARN for the rule'
        required: true
      rule_arn:
        description: 'Rule ARN for updating or removing'
        required: false
      env:
        description: 'Choose the environment (prod, dev, qa, uat)'
        required: true
        default: 'prod'

jobs:
  manage-lb-rules:
    runs-on: ubuntu-latest
    needs: lb-management  # Ensure LB is created before modifying rules
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Add/Update/Delete LB Rule
        run: |
          if [ "${{ github.event.inputs.action }}" == "add" ]; then
            aws elbv2 create-rule --listener-arn ${{ github.event.inputs.listener_arn }} --priority 1 --actions Type=forward,TargetGroupArn=${{ github.event.inputs.target_group_arn }} --conditions Field=path-pattern,Values='/'
          elif [ "${{ github.event.inputs.action }}" == "update" ]; then
            aws elbv2 modify-rule --rule-arn ${{ github.event.inputs.rule_arn }} --actions Type=forward,TargetGroupArn=${{ github.event.inputs.target_group_arn }}
          elif [ "${{ github.event.inputs.action }}" == "remove" ]; then
            aws elbv2 delete-rule --rule-arn ${{ github.event.inputs.rule_arn }}
          fi
